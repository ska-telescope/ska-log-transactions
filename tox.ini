[tox]
envlist = py37

[testenv]
setenv = PIP_DISABLE_VERSION_CHECK = 1
whitelist_externals = mkdir
install_command = python -m pip install --extra-index-url https://nexus.engageska-portugal.pt/repository/pypi/simple {opts} {packages}
deps =
    -rrequirements.txt  # runtime requirements
    -rrequirements-test.txt   # test/development requirements
commands =
    # this ugly hack is here because:
    # https://github.com/tox-dev/tox/issues/149
    - mkdir -p build/htmlcov
    - mkdir -p build/reports
    - python -m pip install -U --extra-index-url https://nexus.engageska-portugal.pt/repository/pypi/simple -r{toxinidir}/requirements.txt
    - python -m pytest

# sitepackages = true
sitepackages = false

[testenv:docs]
basepython = python3
sitepackages = false
skip_install = true
description = build documentation
whitelist_externals = mkdir
deps =
    Sphinx == 3.0.1
    sphinx-rtd-theme >= 0.4.3
    numpy == 1.17.2
    jsonschema >= 3.2.0
    recommonmark
    m2r
commands =
    - mkdir -p build/html
    - sphinx-build -T -E -b html  -D language=en  docs/src docs/build/html

[testenv:lint]
basepython = python3
skip_install = true
description = report linting
whitelist_externals =
    mkdir
    bash
deps = -rrequirements-test.txt
commands =
    - mkdir -p build/reports
    - pip install -r requirements.txt  --extra-index-url https://nexus.engageska-portugal.pt/repository/pypi/simple
    - bash -c "pylint --output-format=parseable ./src/ska/log_transactions | tee  ./build/reports/pylint.txt"
    - bash -c "pylint --output-format=pylint2junit.JunitReporter ./src/ska/log_transactions | tee ./build/reports/linting.xml"

[testenv:package]
passenv = PACKAGE_TAG
basepython = python3
skip_install = true
description = build packages and check validity
deps =
    twine
    wheel
    katversion
commands =
    python3 setup.py sdist bdist_wheel
    twine check dist/*.whl


[testenv:darglint]
basepython = python3
skip_install = true
description = cross-check docstrings with function signature
deps =
    darglint
    Sphinx == 3.0.1
commands =
    darglint --docstring-style sphinx ./src


[pytest]
addopts = --cov ska.log_transactions --json-report --json-report-file=build/htmlcov/report.json --cov-report term --cov-report html:build/htmlcov --cov-report xml:build/reports/code-coverage.xml --junitxml=build/reports/unit-tests.xml
testpaths =
    tests

[darglint]
docstring_style=sphinx